/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.checkerframework.checker.units.qual.A;
import org.junit.jupiter.api.Test;

import java.io.FileNotFoundException;
import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

public class MainTest {
    @Test void testJavaScriptLinter() throws FileNotFoundException {
        ArrayList<String> expectedErrorLines = new ArrayList<>();
        expectedErrorLines.add("\n" + "Line " + 3 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 5 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 11 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 13 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 15 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 26 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 28 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 32 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 36 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 40 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 41 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 50 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 51 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 64 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 70 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 71 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 72 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 73 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 74 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 76 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 77 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 78 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 79 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 80 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 82 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 83 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 84 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 85 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 86 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 88 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 89 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 90 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 91 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 92 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 94 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 95 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 96 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 97 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 98 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 99 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 100 +  ": Missing semicolon.");
        expectedErrorLines.add("\n" + "Line " + 101 +  ": Missing semicolon.");

        Main main = new Main();
        ArrayList<String> testErrorLines = main.javaScriptLinter("gates.js");
        assertEquals(expectedErrorLines, testErrorLines);
    }
    @Test void fewErrorTest() throws FileNotFoundException {
        ArrayList<String> testFewError = new ArrayList<>();
        testFewError.add("\n" + "Line " + 32 +  ": Missing semicolon.");
        testFewError.add("\n" + "Line " + 55 +  ": Missing semicolon.");
        testFewError.add("\n" + "Line " + 78 +  ": Missing semicolon.");
        testFewError.add("\n" + "Line " + 89 +  ": Missing semicolon.");
        testFewError.add("\n" + "Line " + 98 +  ": Missing semicolon.");

        Main main = new Main();
        ArrayList<String> testResult = main.javaScriptLinter("fewError.js");
        assertEquals(testFewError, testResult);
    }
    @Test void manyErrorTest() throws FileNotFoundException {
        ArrayList<String> testManyError = new ArrayList<>();
        testManyError.add("\n" + "Line " + 5 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 32 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 64 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 70 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 73 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 76 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 79 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 80 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 82 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 84 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 86 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 88 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 89 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 90 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 91 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 92 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 94 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 95 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 96 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 97 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 98 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 99 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 100 +  ": Missing semicolon.");
        testManyError.add("\n" + "Line " + 101 +  ": Missing semicolon.");

        Main main = new Main();
        ArrayList<String> resultExpected = main.javaScriptLinter("manyError.js");
        assertEquals(resultExpected, testManyError);
    }
    @Test void oneErrorTest() throws FileNotFoundException {
        ArrayList<String> oneErrorTest = new ArrayList<>();
        oneErrorTest.add("\n" + "Line " + 50 +  ": Missing semicolon.");

        Main main = new Main();
        ArrayList<String> oneErrorExpected = main.javaScriptLinter("oneError.js");
        assertEquals(oneErrorExpected, oneErrorTest);

    }
    @Test void noErrorTest() throws FileNotFoundException {
        ArrayList<String> noErrorTest = new ArrayList<>();

        Main main = new Main();
        ArrayList<String> resultNoError = main.javaScriptLinter("noError.js");
        assertEquals(resultNoError, noErrorTest);
    }
    @Test void emptyFileTest() throws FileNotFoundException {
        ArrayList<String> testEmptyFile = new ArrayList<>();

        Main main = new Main();
        ArrayList<String> resultNoError = main.javaScriptLinter("noError.js");
        assertEquals(resultNoError, testEmptyFile);
    }
}